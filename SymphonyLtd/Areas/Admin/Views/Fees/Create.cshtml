@model SymphonyLtd.Models.tblFee

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>tblFee</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EnrollmentID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EnrollmentID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EnrollmentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaidDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaidDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeesType, "FeesType", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FeesType", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FeesType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ForMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ForMonth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ForMonth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChargeBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChargeBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChargeBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreateOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeleteBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeleteBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeleteBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeleteOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeleteOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeleteOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@


<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    <strong>Select2</strong> Select Item
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="#" onClick="return false;" class="dropdown-toggle" data-toggle="dropdown"
                           role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li>
                                <a href="#" onClick="return false;">Action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Another action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Something else here</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body">
                @using (Html.BeginForm("Create", "Fees", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                <div class="row clearfix">
                    @Html.HiddenFor(model => model.FeesID)
                    <div class="col-md-12">
                        <p>
                            <b>Student Enrollment ID</b>
                        </p>
                        <div class="form-group default-select select2Style">
                            @Html.DropDownList("EnrollmentID", null, htmlAttributes: new { @class = "form-control select2", name = "EnrollmentID" })

                        </div>
                    </div>
                    <div class="col-md-12">
                        <p>
                            <b>Student</b>
                        </p>
                        <div class="form-group default-select select2Style">
                            @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control select2", name = "StudentID" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>  <div class="form-group">
                        @Html.LabelFor(model => model.PaidDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PaidDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                            @Html.ValidationMessageFor(model => model.PaidDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                  
                    <div class="col-md-12">
                        <p>
                            <b>Fees Type</b>
                        </p>
                        <div class="form-group default-select select2Style">
                            @Html.DropDownList("FeesType", null, htmlAttributes: new { @class = "form-control select2", name = "FeesType" })

                        </div>
                    </div>


                </div>
                    <div class="form-group">
                        <button style="float:right" class="btn btn-primary waves-effect" type="submit">SUBMIT</button>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- #END# Advanced Select -->


@*<script>
    $("#form_validation").submit((e) => {
        e.preventDefault();
        var url = '@Url.Action("Create","Courses")';
        var model = {
            "CourseID": $("#CourseID").val(),
            "CourseName": $("#CourseName").val(),
            "CourseCategory_FK": $("#CourseCategory_FK").val(),
            "CourseDuration": $("#CourseDuration").val(),
            "CourseFees": $("#CourseFees").val(),
            "Description": $("#Description").val(),
            "Term": $("#Term").val(),
            "Topics_FK": $("#Topics_FK").val().toString(),
            "IsActive": $("#IsActive").is(':checked'),
        };
        $.ajax({
            type: "POST",
            url: url,
            data: model, // serializes the form's elements.
            success: function (data) {
                alert(data); // show response from the php script.
            }
        });

    });
</script>*@