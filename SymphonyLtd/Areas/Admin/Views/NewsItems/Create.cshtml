@model SymphonyLtd.Models.tblNewsItem

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>tblNewsItem</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NewsItemHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewsItemHeader, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewsItemHeader, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tages, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeletedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeletedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeletedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeletedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeletedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeletedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    <strong>Select2</strong> Select Item
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="#" onClick="return false;" class="dropdown-toggle" data-toggle="dropdown"
                           role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li>
                                <a href="#" onClick="return false;">Action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Another action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Something else here</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body">
                @using (Html.BeginForm("Create", "NewsItems", FormMethod.Post, new { enctype = "multipart/form-data", id = "form_validation" }))
                {
                    @Html.AntiForgeryToken()

                <div class="row clearfix">
                    @Html.HiddenFor(model => model.NewsItemsID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.NewsItemHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NewsItemHeader, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewsItemHeader, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Tages, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Tages, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Tages, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                    <!-- #END# Tags Input -->
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="file-field input-field">
                                <div class="btn">
                                    <span>Upload Course Thumbnail</span>
                                    <input type="file" name="Image">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-check m-l-10">
                            <label class="form-check-label">
                                @* @Html.CheckBoxFor(model=>model.IsActive,new { @class = "form-check-input" , type="checkbox", id= "checkbox" })*@
                                @if (Model != null)
                                {
                                    if (Model.IsActive.Value)
                                    {
                                        <input class="form-check-input" type="checkbox" id="IsActive" checked name="IsActive">
                                    }

                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" id="IsActive" name="IsActive">

                                }
                                If you want to active this now?
                                <span class="form-check-sign">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                    </div>

                </div>
                    <div class="form-group">
                        <button style="float:right" class="btn btn-primary waves-effect" type="submit">SUBMIT</button>

                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- #END# Advanced Select -->


<script>
    //$("#form_validation").submit((e) => {
    //    e.preventDefault();

    //    var model = {
    //        "CourseID": $("#CourseID").val(),
    //        "CourseName": $("#CourseName").val(),
    //        "CourseCategory_FK": $("#CourseCategory_FK").val(),
    //        "CourseDuration": $("#CourseDuration").val(),
    //        "CourseFees": $("#CourseFees").val(),
    //        "Description": $("#Description").val(),
    //        "Term": $("#Term").val(),
    //        "Topics_FK": $("#Topics_FK").val().toString(),
    //        "IsActive": $("#IsActive").is(':checked'),
    //    };
    //    $.ajax({
    //        type: "POST",
    //        url: url,
    //        data: model, // serializes the form's elements.
    //        success: function (data) {
    //            alert(data); // show response from the php script.
    //        }
    //    });

    //});
 
</script>