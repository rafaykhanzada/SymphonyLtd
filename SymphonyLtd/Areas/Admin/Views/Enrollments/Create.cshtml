@model SymphonyLtd.Models.tblEnrollment

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<!--Form-->

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    <strong>Select2</strong> Select Item
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="#" onClick="return false;" class="dropdown-toggle" data-toggle="dropdown"
                           role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li>
                                <a href="#" onClick="return false;">Action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Another action</a>
                            </li>
                            <li>
                                <a href="#" onClick="return false;">Something else here</a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body">
                @using (Html.BeginForm("Create", "Enrollments", FormMethod.Post, new { enctype = "multipart/form-data", id = "form_validation" }))
                {
                    @Html.AntiForgeryToken()

                <div class="row clearfix">
                    @Html.HiddenFor(model => model.CourseID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CourseID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EnrollFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.EnrollFrom, new { htmlAttributes = new { @class = "form-control", type="date" } })
                            @Html.ValidationMessageFor(model => model.EnrollFrom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EntrollTo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.EntrollTo, new { htmlAttributes = new { @class = "form-control",type="date" } })
                            @Html.ValidationMessageFor(model => model.EntrollTo, "", new { @class = "text-danger" })
                        </div>
                    </div> 
                    <div class="form-group">
                        <div class="form-check m-l-10">
                            <label class="form-check-label">
                                @* @Html.CheckBoxFor(model=>model.IsActive,new { @class = "form-check-input" , type="checkbox", id= "checkbox" })*@
                                @if (Model != null)
                                {
                                    if (Model.IsValid != null && Model.IsValid.Value==true)
                                    {
                                        <input class="form-check-input" type="checkbox" id="checkbox" checked name="IsValid">
                                    }

                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" id="checkbox" name="IsValid">

                                }
                                IsValid
                                <span class="form-check-sign">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-check m-l-10">
                            <label class="form-check-label">
                                @* @Html.CheckBoxFor(model=>model.IsActive,new { @class = "form-check-input" , type="checkbox", id= "checkbox" })*@
                                @if (Model != null)
                                {
                                    if (Model.IsDefaulter != null && Model.IsDefaulter.Value == true)
                                    {
                                        <input class="form-check-input" type="checkbox" id="checkbox" checked name="IsDefaulter">
                                    }

                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" id="checkbox" name="IsDefaulter">

                                }
                                IsDefaulter
                                <span class="form-check-sign">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                    </div><div class="form-group">
                        <div class="form-check m-l-10">
                            <label class="form-check-label">
                                @* @Html.CheckBoxFor(model=>model.IsActive,new { @class = "form-check-input" , type="checkbox", id= "checkbox" })*@
                                @if (Model != null)
                                {
                                    if (Model.IsDropOff != null && Model.IsDropOff.Value == true)
                                    {
                                        <input class="form-check-input" type="checkbox" id="checkbox" checked name="IsDropOff">
                                    }

                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" id="checkbox" name="IsDropOff">

                                }
                                IsDropOff
                                <span class="form-check-sign">
                                    <span class="check"></span>
                                </span>
                            </label>
                        </div>
                    </div>

                </div>
                    <div class="form-group">
                        <button style="float:right" class="btn btn-primary waves-effect" type="submit">SUBMIT</button>

                    </div>
                }
            </div>
        </div>
    </div>
</div>